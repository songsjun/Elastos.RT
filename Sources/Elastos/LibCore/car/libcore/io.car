//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    merge("io/Exceptions.car");
    merge("io/IAsynchronousCloseMonitor.car");
    merge("io/IOs.car");
    merge("io/IIoBridge.car");
    merge("io/ILibcore.car");
    merge("io/ISocketTagger.car");
    merge("io/IBase64.car");
    merge("io/IBufferIterator.car");
    merge("io/IMemory.car");
    merge("io/IMemoryMappedFile.car");
    merge("io/ISizeOf.car");
    merge("io/INioBufferIterator.car");
    merge("io/IDeleteOnExit.car");
    merge("io/IDropBox.car");
    merge("io/IIoUtils.car");
    merge("io/IStreams.car");
    merge("io/IStrictLineReader.car");

    interface Elastos.IO.IInputStream;
    interface Elastos.IO.ICloseable;
    interface Elastos.IO.Charset.ICharset;

    namespace Libcore {
    namespace IO {
        singleton class CAsynchronousCloseMonitor {
            interface IAsynchronousCloseMonitor;
        }

        singleton class CBase64 {
            interface IBase64;
        }

        singleton class CLibcore {
            interface ILibcore;
        }

        singleton class CIoBridge {
            interface IIoBridge;
        }

        singleton class CSocketTaggerHelper {
            interface ISocketTaggerHelper;
        }

        singleton class CStreams {
            interface IStreams;
        }

        singleton class CDeleteOnExitHelper {
            interface IDeleteOnExitHelper;
        }

        singleton class CDropBox {
            interface IDropBox;
        }

        // singleton class CMemory {
        //     interface IMemory;
        // }

        singleton class CIoUtils {
            interface IIoUtils;
        }

        class CMemoryMappedFile {
            constructor(
                [in] Int64 address,
                [in] Int64 size);

            interface IMemoryMappedFile;
            interface ICloseable;
        }

        class CStrictLineReader {
            constructor(
                [in] IInputStream* input);

            constructor(
                [in] IInputStream* input,
                [in] Int32 capacity);

            constructor(
                [in] IInputStream* input,
                [in] ICharset* Charset);

            constructor(
                [in] IInputStream* input,
                [in] Int32 capacity,
                [in] ICharset* Charset);

            interface IStrictLineReader;
            interface ICloseable;
        }
        class CPosix {
            constructor();

            interface IOs;
        }
    }
    }
}